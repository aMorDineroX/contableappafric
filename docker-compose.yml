name: contafricax
services:
  app:
    build: .
    ports:
      - "3002:3000"  # Changé de 3001:3000 à 3002:3000
      - "5173:5173"  # Exposer le port de développement Vite
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3003  # Mise à jour pour correspondre au nouveau port de l'API
    depends_on:
      - api
      - db
    networks:
      - app-network
    dns:
      - 8.8.8.8
      - 8.8.4.4
    extra_hosts:
      - "host.docker.internal:host-gateway"

  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "contafricax"
      POSTGRES_HOST_AUTH_METHOD: "md5"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/server/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./docker/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d contafricax"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network
    command:
      - "postgres"
      - "-c"
      - "hba_file=/etc/postgresql/pg_hba.conf"
      - "-c"
      - "listen_addresses=*"
      - "-c"
      - "max_connections=100"
      - "-c"
      - "shared_buffers=128MB"

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@example.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "False"
      PGADMIN_CONFIG_LOGIN_BANNER: "\"ContAfricaX Development Database\""
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: "30"  # INFO = 20, WARNING = 30, ERROR = 40
      PGADMIN_SERVER_JSON_FILE: "/pgadmin4/servers.json"
      PGPASSFILE: "/pgpass"
      PGADMIN_CONFIG_MAX_LOGIN_ATTEMPTS: 10
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json:ro
      - ./docker/pgadmin/pgpass:/pgpass
    user: root
    command: >
      /bin/sh -c "
      chown -R 5050:5050 /pgpass &&
      chmod 600 /pgpass &&
      /entrypoint.sh
      "
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    dns:
      - 8.8.8.8
      - 8.8.4.4

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "3003:3000"  # Changé de 3001:3000 à 3003:3000
    environment:
      - NODE_ENV=development
      - PORT=3000

      - JWT_SECRET=votre_secret_jwt
      - DB_HOST=db
      - DB_USER=admin
      - DB_PASSWORD=password
      - DB_NAME=contafricax
      - POSTGRES_HOST_AUTH_METHOD=trust
      - WAIT_HOSTS=db:5432
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=3
      - WAIT_HOST_CONNECT_TIMEOUT=30
      - CORS_ORIGIN=http://localhost:5173
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - /app/node_modules
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    dns:
      - 8.8.8.8
      - 8.8.4.4

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  node_modules:

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16  # Changement du sous-réseau pour éviter les conflits
          gateway: 172.25.0.1
